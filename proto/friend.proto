syntax = "proto3";

package chat_im;
import "base.proto";

option cc_generic_services = true;

//
//好友列表获取
message GetFriendListReq{
    string request_id =1;
    optional string user_id =2;
    optional string session_id =3;
}
message GetFriendListRsp{
    string request_id =1;
    bool success =2;
    optional string errmsg=3;
    repeated UserInfo friend_list =4;   //好友列表
}

//
//好友删除
message FriendRemoveReq{
    string request_id =1;
    optional string user_id =2;
    optional string session_id =3;
    string peer_id =4;
}
message FriendRemoveRsp {
    string request_id =1;
    bool success =2;
    optional string errmsg=3;
}

//
//添加好友
message FriendAddReq {
    string request_id =1;
    optional string user_id =2;         //申请人
    optional string session_id =3;
    string respondent_id =4;            //处理人 被添加的人 
}
message FriendAddRsp{
    string request_id =1;
    bool success =2;
    optional string errmsg=3;
    optional string notify_event_id =4;          //通知事件id
}
//处理好友申请              被添加者处理请求 返回
message FriendAddProcessReq{
    string request_id =1;
    string notify_event_id =2;      //通知事件id
    bool agree=3;                   //是否同意
    string apply_user_id =4;        //申请人的用户id
    optional string session_id =5;
    optional string user_id =6;     //被申请的 用户id
}
//  同意后会创建回话，向网关返回会话信息，用于通知双方会话的建立 
message FriendAddProcessRsp{
    string request_id =1;
    bool success =2;
    optional string errmsg=3;
    optional string new_session_id =4;
}
// 获取待处理的好友申请列表   处理者为自己的申请
message GetPendingFriendEventListReq{
    string request_id =1;
    optional string session_id =2;
    optional string user_id =3;
}
message FriendEvent{
    string event_id =1;
    UserInfo sender=3;
}
message GetPendingFriendEventListRsp{
    string request_id =1;
    bool success =2;
    string errmsg=3;
    repeated FriendEvent event=4;
}

//
//好友搜索
message FriendSearchReq{
    string request_id =1;
    string search_key =2;   //名称模糊匹配关键字
    optional string session_id =3;
    optional string user_id =4;
}
message FriendSearchRsp{
    string request_id =1;
    bool success =2;
    string errmsg=3;
    repeated UserInfo user_info =4;     //搜索到的好友列表
}

//
//会话列表获取
message GetChatSessionListReq{
    string request_id =1;
    optional string session_id =2;
    optional string user_id =3;
}
message GetChatSessionListRsp{
    string request_id=1;
    bool success =2;
    string errmsg= 3;
    repeated ChatSessionInfo chat_session_info_list =4;
}

//
//创建会话
message ChatSessionCreateReq{
    string request_id =1;
    optional string session_id=2;
    optional string user_id =3;
    string chat_session_name =4;
    repeated string member_id_list =5;  //群聊的所有成员 包括群聊创建者
}
message ChatSessionCreateRsp{
    string request_id =1;
    bool success =2;
    string errmsg=3;
    optional ChatSessionInfo chat_session_info =4;  //此字段属于后台服务使用的数据，给前端回复不用设置此字段
}

//
//获取会话成员列表
message GetChatSessionMemberReq{
    string request_id =1;
    optional string session_id =2;
    optional string user_id =3;
    string chat_session_id =4;
}
message GetChatSessionMemberRsp{
    string request_id =1;
    bool success =2;
    string errmsg=3;
    repeated UserInfo member_info_list=4;
}


//
//
service FriendService{
    rpc GetFriendList(GetFriendListReq) returns (GetFriendListRsp);
    rpc FriendRemove(FriendRemoveReq) returns (FriendRemoveRsp);
    rpc FriendAdd(FriendAddReq) returns (FriendAddRsp);
    rpc FriendAddProcess(FriendAddProcessReq) returns (FriendAddProcessRsp);
    rpc FriendSearch(FriendSearchReq) returns (FriendSearchRsp);
    rpc GetChatSessionList(GetChatSessionListReq) returns (GetChatSessionListRsp);
    rpc ChatSessionCreate(ChatSessionCreateReq) returns (ChatSessionCreateRsp);
    rpc GetChatSessionMember(GetChatSessionMemberReq) returns (GetChatSessionMemberRsp);
    rpc GetPendingFriendEventList(GetPendingFriendEventListReq) returns (GetPendingFriendEventListRsp);
}